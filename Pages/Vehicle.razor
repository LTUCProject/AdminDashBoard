@page "/vehicles"
@using MidProject.Models.Dto.Response
@using Admin.Services
@using Admin.Dto_s
@inject Admin.Services.AdminService AdminService

<link href="css/vehicle.css" rel="stylesheet" />

<h3 class="text-center">Vehicles Management</h3>

<!-- Total Vehicles Count Section -->
<div class="vehicle-count-container mb-4 text-center">
    <h4>Total Vehicles: <span class="vehicle-count">@vehicles?.Count</span></h4>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>ID</th>
            <th>License Plate</th>
            <th>Model</th>
            <th>Year</th>
            <th>Battery Capacity</th>
            <th>Electric Type</th>
            <th>Client ID</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (vehicles == null)
        {
            <tr>
                <td colspan="8" class="text-center">Loading...</td>
            </tr>
        }
        else if (!vehicles.Any())
        {
            <tr>
                <td colspan="8" class="text-center">No vehicles found.</td>
            </tr>
        }
        else
        {
            @foreach (var vehicle in vehicles)
            {
                <tr>
                    <td>@vehicle.VehicleId</td>
                    <td>@vehicle.LicensePlate</td>
                    <td>@vehicle.Model</td>
                    <td>@vehicle.Year</td>
                    <td>@vehicle.BatteryCapacity</td>
                    <td>@vehicle.ElectricType</td>
                    <td>@vehicle.ClientId</td>
                    <td>
                        <button @onclick="() => DeleteVehicle(vehicle.VehicleId)" class="btn btn-danger btn-sm">Delete</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<VehicleBlazorDto> vehicles;
    private bool isPrerenderingComplete = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isPrerenderingComplete = true;
            await LoadVehicles();
            StateHasChanged(); // Trigger re-render
        }
    }

    private async Task LoadVehicles()
    {
        if (isPrerenderingComplete)
        {
            vehicles = await AdminService.GetAllVehiclesAsync();
        }
    }

    private async Task DeleteVehicle(int id)
    {
        if (isPrerenderingComplete)
        {
            await AdminService.DeleteVehicleAsync(id);
            await LoadVehicles(); // Refresh list after deletion
        }
    }
}
