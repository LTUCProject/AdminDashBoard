@page "/login"
@using Admin.Services
@inject AuthService AuthService
@inject NavigationManager Navigation
<link href="css/login.css" rel="stylesheet" />

<div class="login-container">
    <h3>Login to EVision Dashboard</h3>

    @if (!string.IsNullOrEmpty(loginError))
    {
        <div class="alert alert-danger">@loginError</div>
    }

    <EditForm Model="this" OnValidSubmit="HandleLoginSubmit" class="login-form">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username" class="form-label">Username</label>
            <InputText id="username" @bind-Value="loginUsername" class="form-control" required placeholder="Enter your username" />
        </div>

        <div class="form-group">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" @bind-Value="loginPassword" class="form-control" required placeholder="Enter your password" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    private string loginUsername;
    private string loginPassword;
    private string loginError;

    private async Task HandleLoginSubmit()
    {
        loginError = null;

        var result = await AuthService.LoginAsync(loginUsername, loginPassword);

        if (result.Success)
        {
            // After login success, reload the page to update the navbar state
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            loginError = result.Message;
        }
    }
}
