@page "/login"
@using Admin.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="login-container">
    <h3>Login to EVision Dashboard</h3>

    @if (!string.IsNullOrEmpty(loginError))
    {
        <div class="alert alert-danger">@loginError</div>
    }

    <EditForm Model="this" OnValidSubmit="HandleLoginSubmit" class="login-form">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username" class="form-label">Username</label>
            <InputText id="username" @bind-Value="loginUsername" class="form-control" required placeholder="Enter your username" />
        </div>

        <div class="form-group">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" type="password" @bind-Value="loginPassword" class="form-control" required placeholder="Enter your password" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

<style>
    /* General Styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
    }

    /* Login Page Styles */
    .login-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background: linear-gradient(135deg, #007bff, #6610f2); /* Background gradient */
        color: #fff;
        max-width: 400px;
        margin: auto;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .login-container h3 {
            font-size: 1.75rem;
            margin-bottom: 20px;
            color: #343a40;
        }

    .alert-danger {
        margin-bottom: 15px;
        font-size: 1rem;
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 4px;
    }

    /* Form Styles */
    .login-form {
        width: 100%;
        max-width: 400px;
        padding: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
        border-radius: 8px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        font-weight: bold;
        margin-bottom: 8px;
        color: #495057;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        font-size: 1rem;
        color: #495057;
        background-color: #f9f9f9;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

        .form-control:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 4px rgba(0, 123, 255, 0.5);
        }

    /* Button Styles */
    .btn-primary {
        display: block;
        width: 100%;
        padding: 10px;
        font-size: 1.1rem;
        font-weight: bold;
        color: #ffffff;
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>

@code {
    private string loginUsername;
    private string loginPassword;
    private string loginError;

    private async Task HandleLoginSubmit()
    {
        loginError = null;

        var result = await AuthService.LoginAsync(loginUsername, loginPassword);

        if (result.Success)
        {
            // After login success, reload the page to update the navbar state
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            loginError = result.Message;
        }
    }
}
