@page "/subscriptionplans"
@using Admin.Services
@using Admin.Dto_s
@using MidProject.Models.Dto.Response
@inject Admin.Services.AdminService AdminService

<h3>Subscription Plans</h3>

@if (subscriptionPlans == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Duration (Days)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var plan in subscriptionPlans)
            {
                <tr>
                    <td>@plan.SubscriptionPlanId</td>
                    <td>@plan.Name</td>
                    <td>@plan.Description</td>
                    <td>@plan.Price</td>
                    <td>@plan.DurationInDays</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteSubscriptionPlan(plan.SubscriptionPlanId)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="ShowCreatePlanModal">Add Subscription Plan</button>

@code {
    private List<SubscriptionPlanBlazorDto> subscriptionPlans;

    protected override async Task OnInitializedAsync()
    {
        subscriptionPlans = await AdminService.GetAllSubscriptionPlansAsync();
    }

    private async Task DeleteSubscriptionPlan(int id)
    {
        await AdminService.DeleteSubscriptionPlanAsync(id);
        subscriptionPlans = await AdminService.GetAllSubscriptionPlansAsync();
    }

    private void ShowCreatePlanModal()
    {
        // Logic to show modal for creating a subscription plan
    }
}
