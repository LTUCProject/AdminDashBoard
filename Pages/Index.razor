@page "/"
@using Services
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject AdminService AdminService

<link href="css/index.css" rel="stylesheet" />

@if (_isLoading)
{
    <div class="loading">
        <p>Loading...</p>
    </div>
}
else if (!_isAdmin)
{
    Navigation.NavigateTo("/login", forceLoad: true);

}
else

{
    <div class="dashboard">
        <header class="dashboard-header">
            <h1>Welcome to EVision Admin Dashboard</h1>
            <p>Your one-stop solution to manage all EV operations efficiently.</p>
        </header>

        <div class="dashboard-content">
            <!-- Quick Stats Section -->
            <section class="quick-stats">
                <div class="stats-card">
                    <h3>Total Clients</h3>
                    <p class="stats-number">@clientsCount</p>
                    <a class="btn btn-primary" href="/clients">Manage Clients</a>
                </div>
                <div class="stats-card">
                    <h3>Total Providers</h3>
                    <p class="stats-number">@providersCount</p>
                    <a class="btn btn-primary" href="/providers">Manage Providers</a>
                </div>
                <div class="stats-card">
                    <h3>Total Charging Stations</h3>
                    <p class="stats-number">@stationsCount</p>
                    <a class="btn btn-primary" href="/chargingstations">Manage Stations</a>
                </div>
                <div class="stats-card">
                    <h3>Total Vehicles</h3>
                    <p class="stats-number">@vehiclesCount</p>
                    <a class="btn btn-primary" href="/vehicles">Manage Vehicles</a>
                </div>
            </section>

            <!-- Feature Highlights Section -->
            <section class="features">
                <h2>Key Features:</h2>
                <ul>
                    <li><strong>Client Management:</strong> Efficiently manage all client data.</li>
                    <li><strong>Provider Management:</strong> Monitor and control service providers.</li>
                    <li><strong>Charging Station Monitoring:</strong> Track and manage all charging stations.</li>
                    <li><strong>Notifications:</strong> Get timely updates for key events.</li>
                    <li><strong>Subscription Management:</strong> Easily handle subscription plans.</li>
                </ul>
            </section>
        </div>
    </div>
}

@code {
    private bool _isAdmin;
    private bool _isLoading = true;
    private int clientsCount;
    private int providersCount;
    private int stationsCount;
    private int vehiclesCount;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isAdmin = await AuthService.IsAdmin();
            if (_isAdmin)
            {
                await LoadDashboardData();
            }
            _isLoading = false;  // Set loading state to false once data is fetched
            StateHasChanged(); // Trigger re-render
        }
    }

    private async Task LoadDashboardData()
    {
        // Fetching counts for clients, providers, stations, and vehicles
        var clients = await AdminService.GetAllClientsAsync();
        var providers = await AdminService.GetAllProvidersAsync();
        var stations = await AdminService.GetAllChargingStationsAsync();
        var vehicles = await AdminService.GetAllVehiclesAsync();

        clientsCount = clients.Count;
        providersCount = providers.Count;
        stationsCount = stations.Count;
        vehiclesCount = vehicles.Count;
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}
