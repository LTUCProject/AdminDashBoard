@page "/chargingstations"
@using MidProject.Models.Dto.Response;
@using Admin.Services;
@using Admin.Dto_s;
@inject Admin.Services.AdminService AdminService
@inject IJSRuntime JSRuntime  // Inject IJSRuntime

<h3 class="text-center">Charging Stations Management</h3>

@if (chargingStations == null)
{
        <div class="text-center">
            <p class="spinner-border" role="status"><span class="sr-only">Loading...</span></p>
        </div>
}
else if (!chargingStations.Any())
{
        <div class="alert alert-warning text-center">
            <p>No charging stations found.</p>
            <p>Please refresh the page or check back later.</p>
        </div>
}
else
{
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Location</th>
                        <th>Name</th>
                        <th>Status</th>
                        <th>Address</th>
                        <th>Latitude</th>
                        <th>Longitude</th>
                        <th>Provider</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var chargingStation in chargingStations)
                {
                            <tr>
                                <td>@chargingStation.ChargingStationId</td>
                                <td>@chargingStation.StationLocation</td>
                                <td>@chargingStation.Name</td>
                                <td>@chargingStation.Status</td>
                                <td>@chargingStation.Address</td>
                                <td>@chargingStation.Latitude</td>
                                <td>@chargingStation.Longitude</td>
                                <td>@chargingStation.Provider?.Name</td>
                                <td>
                                    <button @onclick="() => ConfirmDelete(chargingStation.ChargingStationId)" class="btn btn-danger btn-sm">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                }
                </tbody>
            </table>
        </div>
}

@code {
    private List<ChargingStationBlazorDto> chargingStations;

    protected override async Task OnInitializedAsync()
    {
        await LoadChargingStations();
    }

    private async Task LoadChargingStations()
    {
        chargingStations = (await AdminService.GetAllChargingStationsAsync()).ToList();
    }

    private async Task ConfirmDelete(int id)
    {
        bool confirmed = await ShowDeleteConfirmation();
        if (confirmed)
        {
            await AdminService.DeleteChargingStationAsync(id);
            await LoadChargingStations(); // Refresh the list after deletion
        }
    }

    private async Task<bool> ShowDeleteConfirmation()
    {
        // Call JavaScript function for confirmation
        return await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this charging station?");
    }
}
